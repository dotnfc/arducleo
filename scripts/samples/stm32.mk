# This file was orinally generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded
# and modified for Arducleo Samples
# 
# .nfc, 2016/07/30 18:30:05

TARGET_MK=
ifdef F013RB
  #$(warning Target STM32F013RB)
  TARGET_MK=../../stm32f103rx.mk
else ifdef F013RC
  #$(warning Target STM32F013RC)
  TARGET_MK=../../stm32f103rx.mk
else ifdef F051K8
  #$(warning Target STM32F051K8)
  TARGET_MK=../../stm32f051k8.mk
else ifdef F072RB
  #$(warning Target STM32F072RB)
  TARGET_MK=../../stm32f072rb.mk
else ifdef F401RE
  #$(warning Target STM32F401RE)
  TARGET_MK=../../stm32f401re.mk
else ifdef F405RG
  #$(warning Target STM32F405RG)
  TARGET_MK=../../stm32f405rg.mk
endif

ifeq ($(TARGET_MK),)
  $(warning UnknownTarget)
else
  include $(TARGET_MK)
endif


PRJ_NAME=$(notdir $(SRCDIR))
SRCROOT=$(SRCDIR)/
GCC_BIN = 
PROJECT = arducleo_$(PLAT_MCU)_$(PRJ_NAME)
OBJS_C   = $(patsubst %.c,./%.o,$(notdir $(wildcard $(SRCROOT)*.c)))
OBJS_CPP = $(patsubst %.cpp,./%.o,$(notdir $(wildcard $(SRCROOT)*.cpp)))
OBJECTS  = $(OBJS_C) $(OBJS_CPP)

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 
COPY    = copy

  
ifeq ($(DEBUG), 1)
	CC_FLAGS += -DDEBUG -O0
else
	CC_FLAGS += -DNDEBUG -Os
endif


.PHONY: all lst size

all: $(PROJECT).bin $(PROJECT).hex size



.asm.o:
	+@$(call MAKEDIR,$(dir $@))
	@echo compiling $<
	@$(CC) $(CPU) -c $(ASM_FLAGS) -o $@ $<
.s.o:
	+@$(call MAKEDIR,$(dir $@))
	@echo compiling $<
	@$(CC) $(CPU) -c $(ASM_FLAGS) -o $@ $<
.S.o:
	+@$(call MAKEDIR,$(dir $@))
	@echo compiling $<
	@$(CC) $(CPU) -c $(ASM_FLAGS) -o $@ $<

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	@echo compiling $<
	@$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	@echo compiling $<
	@$(CPP) $(CPPC_FLAGS) $(CC_SYMBOLS) $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(LINKER_SCRIPT)
	@echo linking $@ 
	@$(LD) $(LD_FLAGS) -T$(filter %.ld, $^) $(LIBRARY_PATHS) -o $@ $(filter %.o, $^) -Wl,-Map,$(PROJECT).map -Wl,--start-group $(LIBRARIES) $(LD_SYS_LIBS) -Wl,--end-group

$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@
	$(COPY) $@ ..\..\..\bins

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
